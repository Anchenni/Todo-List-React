{"ast":null,"code":"var _jsxFileName = \"/Users/anchenni/Desktop/workspace/mygit/Todo-List-React/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardText, CardTitle, CardBody, Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EditTask from '../modals/EditTask';\nimport { FaTrashAlt, FaEdit } from 'react-icons/fa';\n\n/**\n * It returns a card with the name, description, and buttons to edit and delete the task\n * @returns A card with the name, description, and buttons to edit and delete the task.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  _s();\n  let {\n    taskObj,\n    index,\n    deleteTask,\n    updateListArray\n  } = _ref;\n  const [modal, setModal] = useState(false);\n\n  /**\n   * It toggles the modal.\n   */\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  /**\n   * The function is called when the delete button is clicked. It calls the deleteTask function, which\n   * is passed the index of the task to be deleted\n   */\n  const handleDelete = () => {\n    deleteTask(index);\n  };\n\n  /**\n   * It takes an object and an index, and then updates the list array with the object at the index\n   * @param obj - The object that you want to update.\n   */\n  const updateTask = obj => {\n    updateListArray(obj, index);\n  };\n  /* Returning a card with the name, description, and buttons to edit and delete the task. */\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      \"margin\": \"10px\",\n      width: '18rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h5\",\n        children: [\" \", taskObj.Name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: taskObj.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-task\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: () => setModal(true),\n          children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(EditTask, {\n          modal: modal,\n          toggle: toggle,\n          updateTask: updateTask,\n          taskObj: taskObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 4\n  }, this);\n};\n_s(Cards, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","Card","CardText","CardTitle","CardBody","Button","EditTask","FaTrashAlt","FaEdit","Cards","taskObj","index","deleteTask","updateListArray","modal","setModal","toggle","handleDelete","updateTask","obj","width","Name","Description"],"sources":["/Users/anchenni/Desktop/workspace/mygit/Todo-List-React/src/components/Card.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card,CardText, CardTitle,CardBody,Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EditTask from '../modals/EditTask';\nimport { FaTrashAlt, FaEdit } from 'react-icons/fa';\n\n\n\n\n/**\n * It returns a card with the name, description, and buttons to edit and delete the task\n * @returns A card with the name, description, and buttons to edit and delete the task.\n */\nconst Cards = ({taskObj, index, deleteTask, updateListArray}) => {\n\tconst [modal, setModal] = useState(false);\n\n\t/**\n\t * It toggles the modal.\n\t */\n\tconst toggle = () => {\n\t\tsetModal(!modal);\n\t}\n\n\t/**\n\t * The function is called when the delete button is clicked. It calls the deleteTask function, which\n\t * is passed the index of the task to be deleted\n\t */\n\tconst handleDelete = () =>{\n\t\tdeleteTask(index);\n\t}\n\n\t/**\n\t * It takes an object and an index, and then updates the list array with the object at the index\n\t * @param obj - The object that you want to update.\n\t */\n\tconst updateTask = (obj) => {\n\t\tupdateListArray(obj, index);\n\t}\n\t/* Returning a card with the name, description, and buttons to edit and delete the task. */\n\treturn (\n\t\t\n\t\t\t<Card style={{ \"margin\": \"10px\", width: '18rem'}}>\n\t\t\t<CardBody>\t\n\t\t\t\t<CardTitle tag=\"h5\"> {taskObj.Name}</CardTitle>\n\t\t\t\t<div className='description'>\n\t\t\t\t{taskObj.Description}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t  \n\t\t\t\t<div className= \"button-task\">\n\t\t\t\t\t<Button color =\"success\" onClick = {() => setModal(true) }><FaTrashAlt/></Button>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<Button color= \"danger\" onClick  = {handleDelete}><FaEdit/></Button>\n\t\t\t\t\t\n\t\t\t\t<EditTask modal = {modal} toggle = {toggle} updateTask = {updateTask} taskObj = {taskObj}/>\n\t\t\t\t</div>\n\t\t\t</CardBody>\n\t\t\t</Card> \n\t\t\t\n\t\t\n\t);\n};\nexport default Cards;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAACC,QAAQ,EAAEC,SAAS,EAACC,QAAQ,EAACC,MAAM,QAAQ,YAAY;AACrE,OAAO,sCAAsC;AAC7C,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,SAASC,UAAU,EAAEC,MAAM,QAAQ,gBAAgB;;AAKnD;AACA;AACA;AACA;AAHA;AAIA,MAAMC,KAAK,GAAG,QAAmD;EAAA;EAAA,IAAlD;IAACC,OAAO;IAAEC,KAAK;IAAEC,UAAU;IAAEC;EAAe,CAAC;EAC3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAEzC;AACD;AACA;EACC,MAAMgB,MAAM,GAAG,MAAM;IACpBD,QAAQ,CAAC,CAACD,KAAK,CAAC;EACjB,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMG,YAAY,GAAG,MAAK;IACzBL,UAAU,CAACD,KAAK,CAAC;EAClB,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMO,UAAU,GAAIC,GAAG,IAAK;IAC3BN,eAAe,CAACM,GAAG,EAAER,KAAK,CAAC;EAC5B,CAAC;EACD;EACA,oBAEE,QAAC,IAAI;IAAC,KAAK,EAAE;MAAE,QAAQ,EAAE,MAAM;MAAES,KAAK,EAAE;IAAO,CAAE;IAAA,uBACjD,QAAC,QAAQ;MAAA,wBACR,QAAC,SAAS;QAAC,GAAG,EAAC,IAAI;QAAA,WAAC,GAAC,EAACV,OAAO,CAACW,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eAC/C;QAAK,SAAS,EAAC,aAAa;QAAA,UAC3BX,OAAO,CAACY;MAAW;QAAA;QAAA;QAAA;MAAA,QACd,eAGN;QAAK,SAAS,EAAE,aAAa;QAAA,wBAC5B,QAAC,MAAM;UAAC,KAAK,EAAE,SAAS;UAAC,OAAO,EAAI,MAAMP,QAAQ,CAAC,IAAI,CAAG;UAAA,uBAAC,QAAC,UAAU;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,QAEjF,uBAAC,MAAM;UAAC,KAAK,EAAE,QAAQ;UAAC,OAAO,EAAKE,YAAa;UAAA,uBAAC,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eAErE,QAAC,QAAQ;UAAC,KAAK,EAAIH,KAAM;UAAC,MAAM,EAAIE,MAAO;UAAC,UAAU,EAAIE,UAAW;UAAC,OAAO,EAAIR;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACrF;IAAA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACJ;AAIV,CAAC;AAAC,GAhDID,KAAK;AAAA,KAALA,KAAK;AAiDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}